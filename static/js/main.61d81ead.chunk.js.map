{"version":3,"sources":["components/ChooseDay/ChooseDate.module.css","redux/users-reducer.ts","redux/userNotes-reducer.ts","components/Header/Header.module.css","components/SignUp/SignUp.module.css","reportWebVitals.ts","assets/images/svg/calendar.svg","components/ChooseDay/ChooseDay.tsx","components/Header/Links/CalendarLink.tsx","components/Header/Links/NotesLInk.tsx","components/Header/Links/AdminLink.tsx","components/Header/Links/LoginLink.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","redux/notes-reducer.ts","components/Notepad/NotepadRow/NotepadRow.tsx","components/Notepad/NotepadRow/NotepadRowContainer.tsx","components/Notepad/Notepad.tsx","components/Notepad/NotepadContainer.tsx","redux/auth-reducer.ts","redux/store-redux.ts","components/SelectDates/SelectDates.tsx","helpers/validation/validate-form.tsx","helpers/renderField/renderField.tsx","assets/images/preloader.svg","components/Login/LogInContainer.tsx","components/Login/LogIn.tsx","components/SignUp/SignUpContainer.tsx","components/SignUp/SignUp.tsx","helpers/getDays/getDays.ts","components/Calendar/Day/Day.tsx","components/Calendar/Calendar.tsx","components/Calendar/CalendarContainer.tsx","components/ConfirmWindow/ConfirmWindow.tsx","App.tsx","index.tsx","firebase/firebase.ts","components/Notepad/Notepad.module.css","components/SelectDates/SelectDates.module.css","components/Login/LogIn.module.css","components/Calendar/Day/Day.module.css","components/Calendar/Calendar.module.css","components/ConfirmWindow/ConfirmWindow.module.css"],"names":["module","exports","SET_USERS","initialState","usersReducer","state","action","type","newState","key","users","push","id","getUsers","dispatch","a","firebaseUserAPI","then","response","val","sendNewUserData","userId","email","firstName","lastName","role","editUserProfile","SET_USER_NOTES","RESET_USER_NOTES","userNotesReducer","notes","sort","b","time","moment","date","split","reverse","join","resetUserNotes","getUserNotes","firebaseNotesAPI","getNotes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ChooseDay","useState","day","setDay","open","setOpen","history","useHistory","defaultMaterialTheme","createMuiTheme","palette","primary","amber","className","style","date_icon","onClick","src","calendar","alt","title","date_field","ThemeProvider","theme","utils","MomentUtils","value","onChange","onClose","onAccept","e","format","openDate","CalendarLink","classNames","link","item","activeClassName","item_current","exact","to","NotesLink","showSelectedDates","setShowSelectedDates","item_select_dates","item_focus","isActive","match","location","pathname","AdminLink","userRole","LoginLink","isAuth","setShowConfirmWindow","item_login","Header","container","items","item_choose_day","right","connect","auth","user","props","SET_NOTES","ADD_NOTE","EDIT_NOTE","REMOVE_NOTE","CLEAR_NOTES_STATE","setNotes","addNoteAC","hour","editNoteAC","removeNoteAC","clearNotesState","NotepadRow","addNote","changeField","title__notepad_row","notepad_row","field","onBlur","getFieldData","noteData","el","addNewNote","getState","editNote","removeNote","prevFieldValue","noteFieldValue","setNoteFieldValue","useEffect","trim","target","Notepad","datesData","hours","getTitle","notepad","log_out","length","data","notepad__message","current","map","getDatesData","dateOne","dateTwo","noteDate","isBetween","undefined","prevTitle","newTitle","setPrevTitle","NEW_SESSIONS","REMOVE_SESSIONS","TOGGLE_IS_FETCHING","isFetching","newSessionsAC","toggleIsFetchingAC","getUserProfile","userID","rootReducer","combineReducers","newNote","note","filter","form","formReducer","userNotes","store","createStore","applyMiddleware","thunk","window","SelectDates","changeDateOne","changeDateTwo","isValidDates","setValidDates","isSameOrBefore","handleSubmit","dates__wrapper","onMouseLeave","dates__title","dates__container","autoOk","dates__field","InputAdornmentProps","position","dates__error","dates__button_box","dates__button","validate","values","errors","test","password","confirmPassword","renderField","input","placeholder","label","meta","touched","error","warning","field_box","field_error","LoginForm","reduxForm","login_container","onSubmit","Field","name","component","submitError","message","nav_box","button","disabled","preloader","newSessions","newSession","uid","catch","stopSubmit","_error","formData","SignUpForm","sign_up_container","flex_box","flex_field","signUp","createAccount","setUserProfile","getDaysOfTheMonth","month","daysInMonth","arrDays","getDaysArrayByMonth","daysOfTheWeek","number","isHoliday","getNumberOfNotes","clearItem","nameOfDay","green","Calendar","toggleMonth","structurePage","navContainer","arrowLeftBox","navLeft","arrowRightBox","navRight","CalendarContainer","setMonth","daysInMonthArray","elementsArr","i","Math","random","removeSessions","removeSession","text","buttonGroup","AdminContainer","React","lazy","AppContainer","withRouter","firebase","onAuthStateChanged","showConfirmWindow","path","render","fallback","MainApp","basename","process","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","document","getElementById","createUserWithEmailAndPassword","setPersistence","Auth","Persistence","LOCAL","signInWithEmailAndPassword","signOut","database","ref","set","once","updateData","updates","update","remove"],"mappings":"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","file":"static/js/main.61d81ead.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"date_icon\":\"ChooseDate_date_icon__2GNv4\",\"date_field\":\"ChooseDate_date_field__2QM_f\"};","import {UserType} from \"../types/types\"\nimport {firebaseUserAPI} from \"../firebase/firebase\"\nimport {ThunkAction} from \"redux-thunk\"\nimport {AppStateType} from \"./store-redux\"\n\nconst SET_USERS: string = 'USERS/SET_USERS'\n\nconst initialState: Array<UserType> = []\n\nexport const usersReducer = (state = initialState, action: ActionTypes ): Array<UserType> => {\n\tswitch (action.type) {\n\t\tcase SET_USERS:\n\t\t\tlet newState: Array<UserType> = []\n\t\t\tfor(let key in action.users) newState.push({id: key, ...action.users[key]})\n\t\t\treturn newState\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\ntype ActionTypes = SetUsersType\ntype SetUsersType = {\n\ttype: typeof SET_USERS\n\tusers: Array<UserType>\n}\n\nconst setUsersAC = (users: Array<UserType>) => ({type: SET_USERS, users })\n\nexport const getUsers = (): ThunkAction<Promise<void>, AppStateType, unknown, ActionTypes> => {\n\treturn async (dispatch) => {\n\t\tawait firebaseUserAPI.getUsers()\n\t\t\t.then(response => {\n\t\t\t\tdispatch(setUsersAC(response.val()))\n\t\t\t})\n\t}\n}\n\nexport const sendNewUserData = (userId, email, firstName, lastName, role): ThunkAction<Promise<void>, AppStateType, unknown, ActionTypes> => {\n\treturn async (dispatch) => {\n\t\tawait firebaseUserAPI.editUserProfile(userId, email, firstName, lastName, role)\n\t\t\t.then(() => dispatch(getUsers()))\n\t}\n}\n\n","import {NoteType} from \"../types/types\"\nimport {firebaseNotesAPI} from \"../firebase/firebase\";\nimport { ThunkAction } from \"redux-thunk\";\nimport {AppStateType} from \"./store-redux\";\nimport moment from \"moment\";\n\nconst SET_USER_NOTES: string = \"USER_NOTES/SET_USER_NOTES\"\nconst RESET_USER_NOTES: string = \"USER_NOTES/RESET_USER_NOTES\"\n\nconst initialState: Array<NoteType> = []\n\nexport const userNotesReducer = (state= initialState, action: ActionTypes): Array<NoteType> => {\n\tswitch (action.type) {\n\t\tcase SET_USER_NOTES:\n\t\t\tlet newState: NoteType[] = []\n\t\t\tfor(let key in action.notes) newState.push({...action.notes[key]})\n\t\t\tnewState.sort((a: any, b: any) => a.time-b.time)\n\t\t\tnewState.sort((a: NoteType, b: NoteType) => {\n\t\t\t\t// @ts-ignore\n\t\t\t\treturn moment(a.date.split('.').reverse().join('-'))-moment(b.date.split('.').reverse().join('-'))\n\t\t\t})\n\t\t\treturn newState\n\t\tcase RESET_USER_NOTES:\n\t\t\treturn []\n\t}\n\treturn state\n}\n\ntype ActionTypes = SetUserNotesType & ResetUserNotesType\ntype SetUserNotesType = {\n\ttype: typeof SET_USER_NOTES\n\tnotes: Array<NoteType>\n}\ntype ResetUserNotesType = {\n\ttype: typeof RESET_USER_NOTES\n}\nconst setUserNotes = (notes: Array<NoteType>): SetUserNotesType => ({type: SET_USER_NOTES, notes})\nexport const resetUserNotes = (): ResetUserNotesType => ({type: RESET_USER_NOTES})\n\nexport const getUserNotes = (id: string | null): ThunkAction<Promise<void>,AppStateType, unknown, ActionTypes> => {\n\treturn  async (dispatch) => {\n\t\tawait firebaseNotesAPI.getNotes(id)\n\t\t\t.then(response => dispatch(setUserNotes(response.val())))\n\t}\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__1VC87\",\"items\":\"Header_items__2Dz-W\",\"link\":\"Header_link__2wI74\",\"item\":\"Header_item__3IlmB\",\"item_focus\":\"Header_item_focus__7l5Yi\",\"item_current\":\"Header_item_current__s-QA1\",\"item_choose_day\":\"Header_item_choose_day__20yW-\",\"right\":\"Header_right__XlGVu\",\"item_login\":\"Header_item_login__2dGsg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sign_up_container\":\"SignUp_sign_up_container__1a11E\",\"title\":\"SignUp_title__2vuQZ\",\"field\":\"SignUp_field__1eFq0\",\"error\":\"SignUp_error__39M2d\",\"submitError\":\"SignUp_submitError__2EGcZ\",\"field_error\":\"SignUp_field_error__1v6hA\",\"button\":\"SignUp_button__2FVPE\",\"link\":\"SignUp_link__2UIUV\",\"nav_box\":\"SignUp_nav_box__1ts8Y\",\"flex_box\":\"SignUp_flex_box__SNflj\",\"flex_field\":\"SignUp_flex_field__3lFld\",\"preloader\":\"SignUp_preloader__2E0B4\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/calendar.1c75522b.svg\";","import React, {useState} from 'react'\nimport moment from \"moment\"\nimport MomentUtils from \"@date-io/moment\"\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\"\nimport {createMuiTheme, ThemeProvider} from \"@material-ui/core\"\nimport {amber} from \"@material-ui/core/colors\"\nimport style from './ChooseDate.module.css'\nimport calendar from '../../assets/images/svg/calendar.svg'\nimport { useHistory } from \"react-router-dom\";\n\ntype PropsType = {}\n\nconst ChooseDay: React.FC<PropsType> = () => {\n\tconst [day, setDay] = useState<moment.Moment | null>(moment())\n\tconst [open, setOpen] = useState<boolean>(false)\n\tconst history = useHistory();\n\n\tconst openDate = (e: moment.Moment | null): void => {\n\t\te && history.push(`/notepad/${e.format('DD.MM.YYYY')}`)\n\t\tsetOpen(false)\n\t}\n\n\tconst defaultMaterialTheme: object = createMuiTheme({\n\t\tpalette: {\n\t\t\tprimary: amber,\n\t\t}\n\t})\n\n\treturn (\n\t\t<div>\n\t\t\t<div className={style.date_icon} onClick={() => setOpen(true)}>\n\t\t\t\t<img src={calendar} alt=\"Calendar\" title=\"Choose date\"/>\n\t\t\t</div>\n\t\t\t<div className={style.date_field}>\n\t\t\t\t<ThemeProvider theme={defaultMaterialTheme}>\n\t\t\t\t\t<MuiPickersUtilsProvider utils={MomentUtils}>\n\t\t\t\t\t\t<KeyboardDatePicker\n\t\t\t\t\t\t\tvalue={day}\n\t\t\t\t\t\t\tonChange={setDay}\n\t\t\t\t\t\t\topen={open}\n\t\t\t\t\t\t\tonClose={() => setOpen(false)}\n\t\t\t\t\t\t\tonAccept={(e) => openDate(e)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</MuiPickersUtilsProvider>\n\t\t\t\t</ThemeProvider>\n\t\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default ChooseDay","import React from 'react'\nimport classNames from \"classnames\";\nimport style from \"../Header.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\nconst CalendarLink: React.FC = () => {\n\treturn (\n\t\t<NavLink className={classNames([style.link, style.item])}\n\t\t\t\t activeClassName={style.item_current} exact to=\"/\" >\n\t\t\t<li>Calendar</li>\n\t\t</NavLink>\n\t)\n}\n\nexport default CalendarLink","import React from 'react'\nimport classNames from \"classnames\"\nimport style from \"../Header.module.css\"\nimport {NavLink} from \"react-router-dom\"\n\ntype PropsType = {\n\tshowSelectedDates: boolean\n\tsetShowSelectedDates: (type: boolean) => void\n}\n\nconst NotesLink: React.FC<PropsType> = ({showSelectedDates, setShowSelectedDates}) => {\n\treturn (\n\t\t<NavLink className={classNames([style.link,style.item, style.item_select_dates, showSelectedDates ? style.item_focus : ''])}\n\t\t\t\t onClick={() => setShowSelectedDates(!showSelectedDates)}\n\t\t\t\t to={''}\n\t\t\t\t activeClassName={style.item_current}\n\t\t\t\t isActive={(match, location): boolean => {\n\t\t\t\t\t let loc = location.pathname.split('/')\n\t\t\t\t\t return loc[1] === 'notepad'\n\t\t\t\t }}>\n\t\t\t<li>Notes</li>\n\t\t</NavLink>\n\t)\n}\n\nexport default NotesLink","import React from 'react'\nimport {NavLink} from \"react-router-dom\"\nimport classNames from \"classnames\"\nimport style from \"../Header.module.css\"\n\ntype PropsType = {\n\tuserRole: string | null\n}\n\n\nconst AdminLink: React.FC<PropsType> = ({userRole}) => {\n\n\tif(userRole !== 'admin')  return <></>\n\treturn (\n\t\t<NavLink className={classNames([style.link, style.item])}\n\t\t\t\t activeClassName={style.item_current} exact to=\"/admin\">\n\t\t\t<li>Admin</li>\n\t\t</NavLink>\n\t)\n}\n\nexport default AdminLink","import React from 'react'\nimport {NavLink} from \"react-router-dom\"\nimport classNames from \"classnames\"\nimport style from \"../Header.module.css\"\n\ntype PropsType = {\n    isAuth: boolean\n    setShowConfirmWindow: (boolean) => void\n}\n\nconst LoginLink: React.FC<PropsType> = ({isAuth, setShowConfirmWindow}) => {\n\n    if(isAuth) return <li className={classNames([style.link, style.item, style.item_login])}\n                                          onClick={setShowConfirmWindow}>Sign out</li>\n    return (\n        <NavLink className={classNames([style.link, style.item, style.item_login])} exact to=\"/login\"\n                 activeClassName={style.item_current}\n                 isActive={(match, location): boolean => {\n                     if (location.pathname === '/login' || location.pathname === '/signup') {\n                         return true\n                     }\n                     return false\n                 }}\n        >\n            <li>Log In</li>\n        </NavLink>\n    )\n}\n\nexport default LoginLink","import React, {FunctionComponent} from 'react'\nimport style from './Header.module.css'\nimport classNames from \"classnames\"\nimport ChooseDay from '../ChooseDay/ChooseDay'\nimport { PropsType } from './HeaderContainer'\nimport CalendarLink from \"./Links/CalendarLink\";\nimport NotesLink from \"./Links/NotesLInk\";\nimport AdminLink from \"./Links/AdminLink\";\nimport LoginLink from \"./Links/LoginLink\";\n\nexport const Header: FunctionComponent<PropsType> = ({setShowSelectedDates,showSelectedDates, isAuth, setShowConfirmWindow, userRole}) => {\n\treturn (\n\t\t<nav className={style.container}>\n\t\t\t<ul className={style.items}>\n\t\t\t\t<CalendarLink />\n\t\t\t\t<NotesLink setShowSelectedDates={setShowSelectedDates} showSelectedDates={showSelectedDates}/>\n\t\t\t\t<li className={classNames([style.item, style.item_choose_day])}>\n\t\t\t\t\t<ChooseDay />\n\t\t\t\t</li>\n\t\t\t\t<div className={style.right}>\n\t\t\t\t\t<AdminLink userRole={userRole}/>\n\t\t\t\t\t<LoginLink isAuth={isAuth} setShowConfirmWindow={setShowConfirmWindow}/>\n\t\t\t\t</div>\n\t\t\t</ul>\n\t\t</nav>\n\t)\n}","import React from \"react\"\nimport { connect } from \"react-redux\";\nimport {Header} from \"./Header\";\nimport {AppStateType} from \"../../redux/store-redux\";\n\ntype OwnProps ={\n\tsetShowSelectedDates: (type: boolean) => void\n\tshowSelectedDates: boolean\n\tsetShowConfirmWindow: (boolean) => void\n}\ntype MapStatePropsType = {\n\tisAuth: boolean\n\tuserRole: string | null\n}\ntype MapDispatchPropsType = {}\n\nexport type PropsType = MapStatePropsType & OwnProps & MapDispatchPropsType\n\nconst HeaderContainer: React.FC<PropsType> = (props) => {\n\treturn (\n\t\t<Header {...props}/>\n\t)\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n\treturn {\n\t\tisAuth: state.auth.isAuth,\n\t\tuserRole: state.auth.user.role\n\t}\n}\n\nexport default connect<MapStatePropsType,MapDispatchPropsType,OwnProps, AppStateType>(mapStateToProps, {})(HeaderContainer)","import {NoteType} from \"../types/types\"\nimport {firebaseNotesAPI} from \"../firebase/firebase\";\nimport { ThunkAction } from \"redux-thunk\";\nimport {AppStateType} from \"./store-redux\";\n\nconst SET_NOTES: string = 'NOTES/SET_NOTES'\nconst ADD_NOTE: string = 'NOTES/ADD_NOTE'\nconst EDIT_NOTE: string = 'NOTES/CHANGE_NOTE'\nconst REMOVE_NOTE: string = 'NOTES/REMOVE_NOTE'\nconst CLEAR_NOTES_STATE: string = 'NOTES/CLEAR_NOTES_STATE'\n\n\nconst initialState: NoteType[] = []\n\nexport const notesReducer = (state=initialState, action: ActionTypes): NoteType[] => {\n    switch (action.type) {\n        case SET_NOTES:\n            let newState: NoteType[] = []\n            for(let key in action.notes) newState.push({id: key, ...action.notes[key]})\n            return newState\n        case ADD_NOTE:\n            const newNote: NoteType = {\n                id: action.id,\n                userId: action.userId,\n                date : action.date,\n                time: action.hour,\n                value: action.value\n            }\n            return [...state, newNote]\n        case EDIT_NOTE:\n            state.map(note => note.id === action.id ? note.value = action.value : true)\n            return state\n        case REMOVE_NOTE:\n            return state.filter(note => note.id !== action.id ? note : null)\n        case CLEAR_NOTES_STATE:\n            return []\n        default:\n            return state\n    }\n}\n\ntype ActionTypes = AddNewNoteType & EditNoteType & RemoveNoteType & SetNotesType & clearNotesStateType\n\ntype SetNotesType = {\n    type: typeof SET_NOTES\n    notes: object\n}\ntype AddNewNoteType = {\n    type: typeof ADD_NOTE\n    id: string | null\n    date: string\n    hour: string\n    value: string\n    userId: string | null\n}\ntype EditNoteType = {\n    type: typeof EDIT_NOTE\n    id: string\n    value: string\n}\ntype RemoveNoteType = {\n    type: typeof REMOVE_NOTE\n    id: string\n}\ntype clearNotesStateType = {\n    type: typeof CLEAR_NOTES_STATE\n}\n\nconst setNotes = (notes: object): SetNotesType => ({type: SET_NOTES, notes})\nconst addNoteAC = (id: string | null, date: string, hour: string, value: string, userId: string | null): AddNewNoteType => ({type: ADD_NOTE, id, date, hour, value, userId: userId})\nconst editNoteAC = (id: string, value: string): EditNoteType  => ({type: EDIT_NOTE, id, value})\nconst removeNoteAC = (id: string): RemoveNoteType => ({type: REMOVE_NOTE, id})\nconst clearNotesStateAC = (): clearNotesStateType => ({type: CLEAR_NOTES_STATE})\n\nexport const getNotes = (userID: string): ThunkAction<Promise<void>, AppStateType, unknown, ActionTypes> => {\n    return async (dispatch) => {\n        await firebaseNotesAPI.getNotes(userID)\n            .then((response) => {\n                let notes = response.val()\n                dispatch(<ActionTypes>setNotes(notes))})\n    }\n}\nexport const addNewNote = (date: string, time: string, value: string): ThunkAction<Promise<void>, AppStateType, unknown, ActionTypes> => {\n    return async (dispatch, getState) => {\n        let userId = getState().auth.user.id\n        await firebaseNotesAPI.addNote(userId,{date, time, value, userId})\n            .then((response) => dispatch(<ActionTypes>addNoteAC(response.key, date, time, value, userId)))\n    }\n}\nexport const editNote = (id: string,date: string, time: string, value: string): ThunkAction<Promise<void>, AppStateType, unknown, ActionTypes> => {\n    return async (dispatch, getState) => {\n        let userId = getState().auth.user.id\n        await firebaseNotesAPI.editNote(userId, id,date, time, value)\n            .then(()=> dispatch(<ActionTypes>editNoteAC(id, value)))\n\n    }\n}\nexport const removeNote = (id: string): ThunkAction<Promise<void>, AppStateType, unknown, ActionTypes> => {\n    return async (dispatch, getState) => {\n        let userId = getState().auth.user.id\n        await firebaseNotesAPI.removeNote(userId, id)\n            .then(() => dispatch(<ActionTypes>removeNoteAC(id)))\n    }\n}\nexport const clearNotesState = () => (dispatch): ThunkAction<Promise<void>, AppStateType, unknown, ActionTypes> =>\n    dispatch(clearNotesStateAC())\n\n\n","import React from \"react\"\nimport style from \"../Notepad.module.css\"\nimport TextareaAutosize from \"react-autosize-textarea\"\n\ntype propsType = {\n    hour: string\n    addNote: () => void\n    title: string | void\n    value: string\n    changeField: (e: React.ChangeEvent<HTMLTextAreaElement>) => void\n}\n\n\nexport const NotepadRow: React.FC<propsType> = ({hour, addNote, title, value,changeField}) => {\n    return (\n        <div>\n            { title && <div className={style.title__notepad_row}>{title}</div>}\n            <div className={style.notepad_row}>\n                <span className={style.time}>{hour}</span><TextareaAutosize value={value}\n                                                                            className={style.field}\n                                                                            onChange={changeField}\n                                                                            onBlur={addNote}\n            />\n            </div>\n        </div>\n    )\n}\n","import React, {useEffect, useState} from 'react'\nimport {AppStateType} from \"../../../redux/store-redux\";\nimport {connect} from \"react-redux\";\nimport {addNewNote, editNote, removeNote} from \"../../../redux/notes-reducer\";\nimport {NotepadRow} from \"./NotepadRow\";\n\ntype NotepadRowContainerType = MapStatePropsType & MapDispatchProps & OwnProps\n\ntype MapStatePropsType = {\n\tnoteData: NoteDataType\n}\ntype MapDispatchProps = {\n\taddNewNote: (date: string, hour: string, value: string) => void\n\teditNote: (id: string, value: string, date: string, hour: string) => void\n\tremoveNote: (id: string) => void\n}\ntype OwnProps = {\n\thour: string\n\tdate: string | string[]\n\ttitle: string | void\n}\ntype NoteDataType = {\n\tid: string\n\tvalue: string\n}\n\nconst NotepadRowContainer: React.FC<NotepadRowContainerType> = (props) => {\n\tlet prevFieldValue: string = props.noteData.value\n\tlet [noteFieldValue, setNoteFieldValue] = useState<string>(props.noteData.value)\n\tuseEffect(()=> setNoteFieldValue(props.noteData.value),[props.date])\n\n\tconst changeField = (e: React.ChangeEvent<HTMLTextAreaElement>): void => setNoteFieldValue(e.target.value)\n\n\tconst confirmField = (): void => {\n\t\t!prevFieldValue && noteFieldValue.trim() &&\n\t\t\tprops.addNewNote(props.date[0], props.hour, noteFieldValue)\n\t\tprevFieldValue && prevFieldValue !== noteFieldValue && noteFieldValue.trim() &&\n\t\t\tprops.editNote(props.noteData.id, props.date[0], props.hour, noteFieldValue)\n\t\tprevFieldValue && !noteFieldValue.trim() &&\n\t\t\tprops.removeNote(props.noteData.id)\n\t}\n\n\treturn (\n\t\t<NotepadRow hour={props.hour}\n\t\t\t\t\tvalue={noteFieldValue}\n\t\t\t\t\taddNote={confirmField}\n\t\t\t\t\ttitle={props.title}\n\t\t\t\t\tchangeField={changeField} />\n\t)\n}\n\nconst getFieldData = (state: AppStateType, date: string[], hour: string): NoteDataType => {\n\tlet noteData: NoteDataType  = {value: '', id: ''}\n\tfor(let el of state.notes) {\n\t\tif(el.date === date[0] && el.time === hour && el.value) {\n\t\t\tnoteData.value = el.value\n\t\t\tnoteData.id = el.id\n\t\t\tbreak\n\t\t}\n\t}\n\treturn noteData\n}\n\nconst mapStateToProps = (state: AppStateType, {date, hour}): MapStatePropsType => {\n\treturn {\n\t\tnoteData: getFieldData(state, date, hour)\n\t}\n\n}\n\nexport default connect<MapStatePropsType, MapDispatchProps, OwnProps, AppStateType>\n\t(mapStateToProps, {addNewNote, editNote, removeNote})(NotepadRowContainer)","import React from 'react'\nimport {NavLink } from 'react-router-dom'\nimport style from './Notepad.module.css'\nimport { DatesDataType } from './NotepadContainer'\nimport NotepadRowContainer from \"./NotepadRow/NotepadRowContainer\"\n\ntype PropsType = {\n    date: string | string[]\n    datesData: DatesDataType\n    hours: Array<string>\n    getTitle: (string) => void\n}\n\n\nexport const Notepad: React.FC<PropsType> = ({date, datesData, hours, getTitle}) => {\n\n    const renderNotepadRow = () => {\n        return datesData.current ?\n            datesData.data.map(el => <NotepadRowContainer key={el.id} hour={el.time} date={[el.date]} title={getTitle(el.date)}/>)\n            :\n            hours.map(hour => <NotepadRowContainer key={hour} hour={hour} date={date} title={''}/>)\n    }\n\n    return (\n        <div className={style.container}>\n            <div className={style.notepad}>\n                <NavLink to='/' className={style.log_out} />\n                {date.length === 1 ? <div className={style.title}>{date}</div> :\n                    datesData.data.length === 0 ? <div className={style.notepad__message}>There aren't notes in the specified range</div> : ''}\n                {renderNotepadRow()}\n            </div>\n        </div>\n    )\n}\n","import React from \"react\"\nimport {AppStateType} from \"../../redux/store-redux\"\nimport moment from \"moment\"\nimport {NoteType} from \"../../types/types\"\nimport {connect} from \"react-redux\"\nimport {Notepad} from \"./Notepad\"\nimport { Redirect } from \"react-router-dom\"\n\ntype OwnProps = {\n\tdate: string | string[]\n}\n\ntype MapStatePropsType = {\n\tdatesData: DatesDataType\n\tisAuth: boolean\n}\nexport type DatesDataType ={\n\tcurrent: boolean\n\tdata: Array<NoteType>\n}\n\ntype PropsType = MapStatePropsType & OwnProps\n\nconst NotepadContainer: React.FC<PropsType> = ({date, datesData, isAuth}) => {\n\tconst hours: Array<string> = ['00.00','01.00','02.00','03.00','04.00','06.00','07.00','08.00','09.00','10.00','11.00','12.00','13.00','14.00','15.00','16.00','17.00','18.00','19.00','20.00','21.00','22.00','23.00']\n\n\tconst setPrevTitle = (title: string ): (newTitle: string) => void => {\n\t\tlet prevTitle: string = title\n\t\treturn (newTitle: string): string => prevTitle !== newTitle ? prevTitle = newTitle : ''\n\t}\n\n\tconst getTitle: (newTitle: string) => void = setPrevTitle('')\n\n\treturn (\n\t\t\tisAuth ? <Notepad date={date}\n\t\t\t\t\t\t\t  datesData={datesData}\n\t\t\t\t\t\t\t  hours={hours}\n\t\t\t\t\t\t\t  getTitle={getTitle}/>\n\t\t\t\t\t: <Redirect to={'/login'}/>\n\n\t\t)\n}\n\nconst getDatesData = (state: AppStateType, date: Array<string>): DatesDataType => {\n\tlet datesData: DatesDataType = {current: false, data: []}\n\tif(date.length > 1) {\n\t\tdatesData.current = true\n\t\tlet dateOne: string = date[0].split('.').reverse().join('-')\n\t\tlet dateTwo: string = date[1].split('.').reverse().join('-')\n\t\tfor(let el of state.notes) {\n\t\t\tlet noteDate = el.date.split('.').reverse().join('-')\n\t\t\tif(moment(noteDate).isBetween(dateOne, dateTwo, undefined, '[]')) datesData.data.push(el)\n\t\t}\n\t\tdatesData.data.sort((a: any, b: any) => a.time-b.time)\n\t\tdatesData.data.sort((a: NoteType, b: NoteType) => {\n\t\t\t// @ts-ignore\n\t\t\treturn moment(a.date.split('.').reverse().join('-'))-moment(b.date.split('.').reverse().join('-'))\n\t\t})\n\t}\n\treturn datesData\n}\n\nconst mapStateToProps = (state: AppStateType, {date}): MapStatePropsType => {\n\treturn {\n\t\tdatesData: getDatesData(state, date),\n\t\tisAuth: state.auth.isAuth\n\t}\n}\n\nexport default connect<MapStatePropsType,{}, OwnProps,AppStateType>(mapStateToProps)(NotepadContainer)","import { stopSubmit } from \"redux-form\"\nimport {firebaseUserAPI } from \"../firebase/firebase\"\nimport {clearNotesState, getNotes } from \"./notes-reducer\"\nimport {ThunkAction} from \"redux-thunk\"\nimport {AppStateType} from \"./store-redux\"\nimport {UserType} from \"../types/types\";\n\nconst NEW_SESSIONS: string = 'AUTH/NEW_SESSIONS'\nconst REMOVE_SESSIONS: string = 'AUTH/REMOVE_SESSIONS'\nconst TOGGLE_IS_FETCHING: string = 'AUTH/TOGGLE_IS_FETCHING'\n\n\ntype InitialStateType = {\n\tuser: UserType\n\tisAuth: boolean\n\tisFetching: boolean\n}\nconst initialState: InitialStateType = {\n\tuser: {\n\t\tid: null,\n\t\tfirstName: '',\n\t\tlastName: '',\n\t\temail: '',\n\t\trole: ''\n\t},\n\tisAuth: false,\n\tisFetching: false\n}\n\n\nexport const authReducer = (state = initialState, action: ActionTypes): InitialStateType => {\n\tswitch(action.type) {\n\t\tcase  NEW_SESSIONS:\n\t\t\treturn {...state, isAuth: true,\n\t\t\t\t   user: {...state.user, id: action.id, firstName: action.firstName, lastName: action.lastName, email: action.email, role: action.role}}\n\t\tcase  REMOVE_SESSIONS:\n\t\t\treturn {...state, isAuth: false,\n\t\t\t\t\tuser: {...state.user, id: '', firstName: '', lastName: '', email: '', role: ''}}\n\t\tcase  TOGGLE_IS_FETCHING:\n\t\t\treturn {...state, isFetching: action.isFetching}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\ntype ActionTypes = NewSessionsType & RemoveSessionsType & ToggleIsFetchingType\ntype NewSessionsType = {\n\ttype: typeof NEW_SESSIONS\n\tid: null | string\n\tfirstName: string\n\tlastName: string\n\temail: string\n\trole: string\n}\ntype RemoveSessionsType = {\n\ttype: typeof REMOVE_SESSIONS\n}\ntype ToggleIsFetchingType ={\n\ttype: typeof TOGGLE_IS_FETCHING\n\tisFetching: boolean\n}\n\nconst newSessionsAC = (id: string, firstName: string, lastName: string, email: string, role: string): NewSessionsType => (\n\t{type: NEW_SESSIONS, id, firstName, lastName, email, role}\n)\nconst removeSessionsAC = (): RemoveSessionsType => ({type: REMOVE_SESSIONS})\nexport const toggleIsFetchingAC = (isFetching : boolean): ToggleIsFetchingType => ({type: TOGGLE_IS_FETCHING, isFetching})\n\nconst getUserProfile =  (userId: string, dispatch): void  => {\n\t firebaseUserAPI.getUserProfile(userId)\n\t\t.then(response => {\n\t\t\tlet {email, firstName, lastName, role} = response.val()\n\t\t\tdispatch(<ActionTypes>newSessionsAC(userId, firstName, lastName, email, role))\n\t\t\tdispatch(getNotes(userId))\n\t\t})\n}\n\nexport const signUp = (firstName: string, lastName: string, email: string, password: string): ThunkAction<void, AppStateType, unknown, ActionTypes> => {\n\treturn (dispatch) => {\n\t    dispatch(<ActionTypes>toggleIsFetchingAC(true))\n\t\tfirebaseUserAPI.createAccount(email, password)\n\t\t\t.then((response) => {\n\t\t\t\tif(response.user) {\n\t\t\t\t\tlet id = response.user.uid\n\t\t\t\t\tlet role = 'user'\n\t\t\t\t\tfirebaseUserAPI.setUserProfile(id, email, firstName, lastName, role)\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\tdispatch(<ActionTypes>newSessionsAC(id, firstName, lastName, email, role))\n\t\t\t\t\t\t\tdispatch(<ActionTypes>toggleIsFetchingAC(false))\n\t\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tdispatch(<ActionTypes>stopSubmit('signup', {_error: error}))\n\t\t\t\tdispatch(<ActionTypes>toggleIsFetchingAC(false))\n\t\t\t})\n\t}\n}\nexport const initializedUser = (id: string): ThunkAction<void, AppStateType, unknown, ActionTypes> => {\n\treturn async (dispatch) => await getUserProfile(id, dispatch)\n}\nexport const newSessions = (email: string, password: string): ThunkAction<Promise<void>, AppStateType, unknown, ActionTypes> => {\n\treturn async (dispatch) => {\n\t\tdispatch(<ActionTypes>toggleIsFetchingAC(true))\n\t\t await firebaseUserAPI.newSession(email, password)\n\t\t\t.then((response) => {\n\t\t\t\tif(response.user) {\n\t\t\t\t\tlet id = response.user.uid\n\t\t\t\t\tgetUserProfile(id, dispatch)\n\t\t\t\t\tdispatch(<ActionTypes>toggleIsFetchingAC(false))\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tdispatch(<ActionTypes>stopSubmit('login', {_error: error}))\n\t\t\t\tdispatch(<ActionTypes>toggleIsFetchingAC(false))\n\t\t\t})\n\t}\n}\nexport const removeSessions = (): ThunkAction<Promise<void>, AppStateType, unknown, ActionTypes> => {\n\treturn async (dispatch) => {\n\t\tawait firebaseUserAPI.removeSession()\n\t\t\t.then((response) => {\n\t\t\t\tdispatch(clearNotesState())\n\t\t\t\tdispatch(<ActionTypes>removeSessionsAC())\n\t\t\t})\n\t}\n}","import {applyMiddleware, combineReducers, createStore} from 'redux'\nimport {notesReducer} from './notes-reducer'\nimport {reducer as formReducer} from 'redux-form'\nimport {authReducer} from \"./auth-reducer\"\nimport thunk from 'redux-thunk'\nimport { usersReducer } from './users-reducer'\nimport { userNotesReducer } from './userNotes-reducer'\n\nconst rootReducer = combineReducers({\n    notes: notesReducer,\n    auth: authReducer,\n    form: formReducer,\n    users: usersReducer,\n    userNotes: userNotesReducer\n})\n\ntype RootReducerType = typeof rootReducer\nexport type AppStateType = ReturnType<RootReducerType>\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\n// @ts-ignore\nwindow.store = store\n\nexport default store","import React, {FunctionComponent, useEffect, useState} from 'react'\nimport MomentUtils from '@date-io/moment'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\nimport style from './SelectDates.module.css'\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core'\nimport {amber} from '@material-ui/core/colors'\nimport moment from 'moment'\nimport {Link} from 'react-router-dom'\n\ninterface propsType {\n\tsetShowSelectedDates: (type: boolean) => void\n}\n\nexport const SelectDates: FunctionComponent<propsType> = ({setShowSelectedDates}) => {\n\tconst [dateOne, changeDateOne] = useState<null | object>(moment())\n\tconst [dateTwo, changeDateTwo] = useState<null | object>(moment())\n\tconst [isValidDates, setValidDates] = useState<boolean>(true)\n\n\tuseEffect(() => {\n\t\tsetValidDates(moment(dateOne).isSameOrBefore(dateTwo))\n\t},[dateOne, dateTwo] )\n\n\tconst defaultMaterialTheme = createMuiTheme({\n\t\tpalette: {\n\t\t\tprimary: amber,\n\t\t}\n\t})\n\n\tconst handleSubmit = (): void => { isValidDates && setShowSelectedDates(false) }\n\n\treturn (\n\t\t<div className={style.dates__wrapper} onMouseLeave={() => setShowSelectedDates(false)}>\n\t\t\t<div className={style.dates__title}>Set interval dates</div>\n\t\t\t<div className={style.dates__container}>\n\t\t\t\t<ThemeProvider theme={defaultMaterialTheme}>\n\t\t\t\t\t<MuiPickersUtilsProvider utils={MomentUtils}>\n\t\t\t\t\t\t<KeyboardDatePicker\n\t\t\t\t\t\t\tautoOk\n\t\t\t\t\t\t\tvalue={dateOne}\n\t\t\t\t\t\t\tonChange={changeDateOne}\n\t\t\t\t\t\t\tformat=\"DD/MM/yyyy\"\n\t\t\t\t\t\t\tclassName={style.dates__field}\n\t\t\t\t\t\t\tInputAdornmentProps={{ position: \"start\" }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<KeyboardDatePicker\n\t\t\t\t\t\t\tautoOk\n\t\t\t\t\t\t\tformat=\"DD/MM/yyyy\"\n\t\t\t\t\t\t\tvalue={dateTwo}\n\t\t\t\t\t\t\tonChange={changeDateTwo}\n\t\t\t\t\t\t\tclassName={style.dates__field}\n\t\t\t\t\t\t\tInputAdornmentProps={{ position: \"start\" }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</MuiPickersUtilsProvider>\n\t\t\t\t</ThemeProvider>\n\t\t\t</div>\n\t\t\t{!isValidDates ? <div className={style.dates__error}>Dates aren't correct!</div> : null}\n\t\t\t<div className={style.dates__button_box}>\n\t\t\t\t{ isValidDates ?\n\t\t\t\t\t<Link to={`/notepad/${moment(dateOne).format(\"DD.MM.yyyy\")}-${moment(dateTwo).format(\"DD.MM.yyyy\")}` }><button className={style.dates__button} onClick={handleSubmit}>Send</button></Link> :\n\t\t\t\t\t<button className={style.dates__button} onClick={handleSubmit}>Send</button> }\n\t\t\t</div>\n\t\t</div>\n\t)\n}","interface errorsType {\n    firstName?: string\n    lastName?: string\n    email?: string\n    password?: string\n    confirmPassword?: string\n}\n\n\nexport const validate = (values: errorsType): errorsType => {\n    const errors: errorsType = {}\n    if (!values.firstName) {\n        errors.firstName = 'Required !'\n    } else if (values.firstName.length > 15) {\n        errors.firstName = 'Must be 15 characters or less !'\n    }\n    if (!values.lastName) {\n        errors.lastName = 'Required !'\n    } else if (values.lastName.length > 15) {\n        errors.lastName = 'Must be 15 characters or less !'\n    }\n    if (!values.email) {\n        errors.email = 'Required !'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email address !'\n    }\n    if (!values.password) {\n        errors.password = 'Required !'\n    }\n    if (!values.confirmPassword) {\n        errors.confirmPassword = 'Required !'\n    } else if (values.confirmPassword !== values.password) {\n        errors.confirmPassword = \"Password doesn't match !\"\n    }\n    return errors\n}\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nexport const renderField = ({input, placeholder, label, type,style, meta: { touched, error, warning }}) => (\n\t<div>\n\t\t<label>{label}</label>\n\t\t<div className={style.field_box}>\n\t\t\t<input {...input} placeholder={placeholder} type={type} className={classNames(style.field, error && touched ? style.field_error : null)}/>\n\t\t\t<div className={style.error}>\n\t\t\t\t{touched &&\n\t\t\t\t((error && <span>{error}</span>) ||\n\t\t\t\t\t(warning && <span>{warning}</span>))}\n\t\t\t</div>\n\t\t</div>\n\t</div>\n)","export default __webpack_public_path__ + \"static/media/preloader.fd866770.svg\";","import React from 'react'\nimport { connect } from 'react-redux'\nimport {reduxForm} from \"redux-form\"\nimport {validate} from \"../../helpers/validation/validate-form\"\nimport { ReduxLoginForm } from './LogIn'\nimport {newSessions} from \"../../redux/auth-reducer\"\nimport {AppStateType} from \"../../redux/store-redux\";\nimport { Redirect } from 'react-router-dom'\n\ntype MapDispatchPropsType = {\n    newSessions: (email: string, password: string) => void\n}\ntype MapStateToPropsType = {\n    isFetching: boolean\n    isAuth: boolean\n}\ntype ReduxProps = {\n    isFetching: boolean\n}\n\ntype PropsType = MapDispatchPropsType & MapStateToPropsType\n\ntype FormDataType = {\n    email: string\n    password: string\n}\n\nconst LoginFormContainer: React.FC<PropsType> = ({newSessions, isFetching, isAuth}) => {\n    const onSubmit = (formData: FormDataType) => {\n        newSessions(formData.email, formData.password)\n    }\n    return  isAuth ? <Redirect to={'/'} /> : <LoginForm onSubmit={onSubmit} isFetching={isFetching}/>\n}\n\nconst LoginForm = reduxForm<FormDataType,ReduxProps>({form: 'login', validate})(ReduxLoginForm)\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        isFetching: state.auth.isFetching,\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport default connect<MapStateToPropsType,MapDispatchPropsType, {}, AppStateType >(mapStateToProps, {newSessions})(LoginFormContainer)\n","import React from 'react'\nimport style from './LogIn.module.css'\nimport {Field} from \"redux-form\"\nimport {NavLink} from \"react-router-dom\"\nimport { renderField } from '../../helpers/renderField/renderField'\nimport preloader from \"../../assets/images/preloader.svg\";\n\nexport const ReduxLoginForm = ({handleSubmit, error, isFetching}) => {\n    return (\n        <div className={style.login_container}>\n            <div className={style.title}>Log In</div>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <Field name=\"email\" component={renderField} type=\"text\" placeholder='Email' style={style}/>\n                </div>\n                <div>\n                    <Field name=\"password\" component={renderField} type=\"password\" placeholder=\"Password\" style={style}/>\n                </div>\n                { error && <div className={style.submitError}>{error.message}</div> }\n                <div className={style.nav_box}>\n                    <NavLink to='/signup' className={style.link} >Sign Up</NavLink>\n                    <button className={style.button} disabled={isFetching}>\n                        {isFetching ?\n                            <img className={style.preloader} src={preloader} alt={preloader}/>\n                            :\n                            'Sign In'\n                        }\n                    </button>\n                </div>\n            </form>\n        </div>\n    )\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport {reduxForm} from \"redux-form\"\nimport {validate} from \"../../helpers/validation/validate-form\"\nimport { ReduxSignUpForm } from './SignUp'\nimport {signUp} from \"../../redux/auth-reducer\"\nimport {AppStateType} from \"../../redux/store-redux\"\nimport { Redirect } from 'react-router-dom'\n\ntype MapDispatchPropsType = {\n    signUp: (firstName: string, lastName: string, email: string, password: string) => void\n}\ntype MapStateToPropsType = {\n    isFetching: boolean\n    isAuth: boolean\n}\ntype ReduxProps = {\n    isFetching: boolean\n}\ntype PropsType = MapDispatchPropsType & MapStateToPropsType\n\nexport type FormDataType = {\n    confirmPassword: string\n    email: string\n    firstName: string\n    lastName: string\n    password: string\n}\n\nconst SignUpFormContainer: React.FC<PropsType> = ({signUp, isFetching, isAuth}) => {\n\n    const onSubmit = (formData: FormDataType): void => signUp(formData.firstName, formData.lastName, formData.email, formData.password)\n\n    return isAuth ? <Redirect to={'/'} /> : <SignUpForm onSubmit={onSubmit} isFetching={isFetching}/>\n}\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        isFetching: state.auth.isFetching,\n        isAuth: state.auth.isAuth\n    }\n}\n\nconst SignUpForm = reduxForm<FormDataType, ReduxProps>({form: 'signup', validate})(ReduxSignUpForm)\n\nexport default connect<MapStateToPropsType,MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {signUp})(SignUpFormContainer)","import React from 'react'\nimport style from './SignUp.module.css'\nimport {Field} from \"redux-form\"\nimport {NavLink} from \"react-router-dom\"\nimport { renderField } from '../../helpers/renderField/renderField'\nimport preloader from \"../../assets/images/preloader.svg\";\n\nexport const ReduxSignUpForm = ({handleSubmit, error, isFetching}) => {\n    return (\n        <div className={style.sign_up_container}>\n            <div className={style.title}>Registration</div>\n            <form onSubmit={handleSubmit}>\n                <div className={style.flex_box}>\n                    <div className={style.flex_field}>\n                        <Field name=\"firstName\" component={renderField} type=\"text\" style={style} placeholder=\"First Name\"/>\n                    </div>\n                    <div className={style.flex_field}>\n                        <Field name=\"lastName\" component={renderField} type=\"text\" style={style} placeholder=\"Last Name\"/>\n                    </div>\n                </div>\n                <div>\n                    <Field name=\"email\" component={renderField} type=\"text\"  style={style} placeholder='Email'/>\n                </div>\n                <div className={style.flex_box}>\n                    <div className={style.flex_field}>\n                        <Field name=\"password\" component={renderField} type=\"password\" style={style} placeholder=\"Password\" />\n                    </div>\n                    <div className={style.flex_field}>\n                        <Field name=\"confirmPassword\" component={renderField} type=\"password\"  style={style} placeholder=\"Confirm password\"/>\n                    </div>\n                </div>\n                { error && <div className={style.submitError}>{error.message}</div> }\n                <div className={style.nav_box}>\n                    <NavLink to='/login' className={style.link}>Log In</NavLink>\n                    <button className={style.button} disabled={isFetching}>\n                        {isFetching ?\n                            <img className={style.preloader} src={preloader} alt={preloader}/>\n                            :\n                            'Sign Up'\n                        }\n                    </button>\n                </div>\n            </form>\n        </div>\n    )\n}","import {ElementsOfDayType} from \"../../types/types\"\nimport moment from \"moment\"\n\nconst isHoliday = (name: string): boolean => {\n\treturn name === \"Saturday\" ? true : name === \"Sunday\"\n}\n\nconst getDaysArrayByMonth = (month): Array<moment.Moment>  => {\n\tlet daysInMonth: number = moment().month(month).daysInMonth()\n\tlet arrDays: Array<moment.Moment> = []\n\twhile(daysInMonth) {\n\t\tarrDays.push(moment().month(month).date(daysInMonth))\n\t\tdaysInMonth--\n\t}\n\treturn arrDays.reverse();\n}\n\nexport const getDaysOfTheMonth = (month): ElementsOfDayType[] => {\n\tconst daysInMonth: Array<moment.Moment> = getDaysArrayByMonth(month)\n\tconst daysOfTheWeek: ElementsOfDayType[] = []\n\tfor(let el of daysInMonth) {\n\t\tdaysOfTheWeek.push({\n\t\t\tname: el.format('dddd'),\n\t\t\tnumber: el.format('D'),\n\t\t\tcurrent: el.format(\"MMM Do YY\") === moment().format(\"MMM Do YY\"),\n\t\t\tisHoliday: isHoliday(el.format('dddd')),\n\t\t\tdate: el.format(\"DD.MM.YYYY\")\n\t\t})\n\t}\n\treturn daysOfTheWeek\n}","import React, {FunctionComponent} from 'react'\nimport style from './Day.module.css'\nimport classNames from \"classnames\";\nimport { Link } from 'react-router-dom';\nimport { ElementsOfDayType } from '../../../types/types';\nimport { connect } from 'react-redux';\nimport {AppStateType} from \"../../../redux/store-redux\";\n\ntype OwnPropsType = {\n    day: ElementsOfDayType\n}\ntype MapStateProsType = {\n    notes: number\n}\ntype DayPropsType = OwnPropsType & MapStateProsType\n\nconst Day: FunctionComponent<DayPropsType> = ({day, notes}) => {\n    return (\n        day.name === 'plug' ?\n            <div className={style.clearItem}/>\n        :\n            <Link className={style.link} to={'notepad/'+ day.date} >\n                <div className={classNames([style.item, day.current ? style.current : ''])}>\n                    <div className={classNames([style.nameOfDay, day.isHoliday ? style.isHoliday : ''])}>{day.name}</div>\n                    <div className={classNames([style.number])}>{day.number}</div>\n                    <div className={classNames([style.note, notes > 0 ? style.green : ''])}>Notes: {notes}</div>\n                </div>\n            </Link>\n    )\n}\n\nconst getNumberOfNotes = (state: AppStateType, date: string): number => {\n    let notesFilter = state.notes.filter(note => note.date === date)\n    return notesFilter.length\n}\n\nconst mapStateToProps = (state , {day}): MapStateProsType => {\n    return {\n        notes: getNumberOfNotes(state, day.date)\n    }\n}\n\nexport default connect<MapStateProsType, {}, OwnPropsType, AppStateType>(mapStateToProps)(Day)","import React from 'react'\nimport Day from \"./Day/Day\"\nimport style from \"./Calendar.module.css\"\nimport moment from 'moment'\nimport {ElementsOfDayType} from \"../../types/types\"\n\ntype PropsType = {\n    toggleMonth: (type: string) => void\n    month: number\n    structurePage: Array<ElementsOfDayType>\n}\nconst Calendar: React.FC<PropsType> = ({toggleMonth, month, structurePage}) => {\n    return (\n        <div className={style.container}>\n            <div className={style.navContainer}>\n                <div className={style.arrowLeftBox} onClick={()=> {toggleMonth('decrement')}}>\n                    <div className={style.navLeft} />\n                </div>\n                <div className={style.title}>{moment().month(month).format(\"MMMM YYYY\")}</div>\n                <div className={style.arrowRightBox} onClick={()=> {toggleMonth('increment')}}>\n                    <div className={style.navRight} />\n                </div>\n            </div>\n            <div className={style.items}>\n                { structurePage.map(day => <Day key={day.date} day={day}/>)}\n            </div>\n        </div>\n\n    )\n}\n\nexport default Calendar","import React from 'react'\nimport {getDaysOfTheMonth} from \"../../helpers/getDays/getDays\"\nimport Day from \"./Day/Day\"\nimport style from \"./Calendar.module.css\"\nimport { useState } from 'react'\nimport moment from 'moment'\nimport {ElementsOfDayType} from \"../../types/types\";\nimport Calendar from \"./Calendar\";\n\ntype PropsType = {}\n\nconst CalendarContainer: React.FC<PropsType> = (props) => {\n    let [month, setMonth] = useState<number>(moment().month())\n    const toggleMonth = (type: string): void => {\n        type === 'decrement' && setMonth(--month)\n        type === 'increment' && setMonth(++month)\n    }\n\n    const structurePage = (): Array<ElementsOfDayType> => {\n        let daysInMonthArray: Array<ElementsOfDayType> = getDaysOfTheMonth(month)\n        let elementsArr: Array<ElementsOfDayType> = []\n        let i: number = 0\n        const daysOfWeek: Array<string> = ['Saturday', 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday','null', 'null', 'null', 'null']\n        daysOfWeek.map(day => {\n            if(day === daysInMonthArray[0].name) {\n               daysInMonthArray.map((day) => elementsArr.push(day))\n                i++\n            }\n            if(i < 35) elementsArr.push({date: Math.random() + '', name: 'plug', number: 'plug', current: false, isHoliday: false})\n            i++\n        })\n        return elementsArr\n    }\n\n    return <Calendar toggleMonth={toggleMonth} month={month} structurePage={structurePage()} />\n}\n\nexport default CalendarContainer","import React from 'react'\nimport {connect} from \"react-redux\"\nimport {removeSessions} from \"../../redux/auth-reducer\"\nimport style  from './ConfirmWindow.module.css'\n\ntype MapDispatchPropsType = {\n\tremoveSessions: () => void\n}\ntype OwnProps = {\n\tsetShowConfirmWindow: (boolean) => void\n}\ntype PropsType = MapDispatchPropsType & OwnProps\n\nconst ConfirmWindow: React.FC<PropsType> = (props) => {\n\treturn (\n\t\t<div className={style.container}>\n\t\t\t<div className={style.text}>Do you really want to leave?</div>\n\t\t\t<div className={style.buttonGroup}>\n\t\t\t\t<button className={style.button} onClick={() => props.setShowConfirmWindow(false)}>No</button>\n\t\t\t\t<button className={style.button} onClick={() => {\n\t\t\t\t\tprops.removeSessions()\n\t\t\t\t\tprops.setShowConfirmWindow(false)\n\t\t\t\t}}>Yes</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport  default connect<null,MapDispatchPropsType,OwnProps>(null, {removeSessions})(ConfirmWindow)","import React, {Suspense, useState} from 'react'\nimport './App.css'\nimport HeaderContainer from \"./components/Header/HeaderContainer\"\nimport NotepadContainer from \"./components/Notepad/NotepadContainer\"\nimport {Route, BrowserRouter, withRouter} from \"react-router-dom\"\nimport {Provider} from \"react-redux\"\nimport store from \"./redux/store-redux\"\nimport {SelectDates} from \"./components/SelectDates/SelectDates\"\nimport classNames from \"classnames\"\nimport LoginFormContainer from \"./components/Login/LogInContainer\"\nimport SignUpFormContainer from \"./components/SignUp/SignUpContainer\"\nimport { useEffect } from 'react'\nimport firebase from \"firebase\"\nimport {initializedUser} from \"./redux/auth-reducer\"\nimport CalendarContainer from \"./components/Calendar/CalendarContainer\"\nimport ConfirmWindow from './components/ConfirmWindow/ConfirmWindow'\n\nconst AdminContainer = React.lazy(() => import(\"./components/Admin/AdminContainer\"))\n\nconst App = (props) => {\n    useEffect(()=> {\n        firebase.auth().onAuthStateChanged((user) => {\n            // @ts-ignore\n            user && store.dispatch(initializedUser(user.uid))\n        })\n    },[])\n\n    const getNotepadTitle = (pathname: string): Array<string> => pathname.split('/')[2].split('-')\n    const [showSelectedDates, setShowSelectedDates] = useState<boolean>(false)\n    const [showConfirmWindow, setShowConfirmWindow] = useState<boolean>(false)\n\n    return (\n        <div className={'app'}>\n            <div className={showConfirmWindow ? 'blur' : ''}>\n                <HeaderContainer setShowSelectedDates={setShowSelectedDates}\n                                 showSelectedDates={showSelectedDates}\n                                 setShowConfirmWindow={setShowConfirmWindow}/>\n                <div className={classNames('dates__popup', showSelectedDates ? 'dates__popup_active' : '')}>\n                    <SelectDates setShowSelectedDates={setShowSelectedDates} />\n                </div>\n                <Route path='/' exact render={() => <CalendarContainer />}/>\n                <Route path='/notepad' render={() => <NotepadContainer date={getNotepadTitle(props.location.pathname)}/>}/>\n                <Route path='/login' render={() => <LoginFormContainer />}/>\n                <Route path='/signup' render={() => <SignUpFormContainer />}/>\n                <Suspense fallback={<div>Загрузка...</div>}>\n                    <Route path='/admin' render={() => <AdminContainer />}/>\n                </Suspense>\n\n            </div>\n            { showConfirmWindow && <ConfirmWindow setShowConfirmWindow={setShowConfirmWindow} /> }\n        </div>\n    )\n}\nconst AppContainer = withRouter(App);\n\nexport const MainApp = () => {\n    return (\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Provider store={store}>\n                <AppContainer />\n            </Provider>\n        </BrowserRouter>\n    )\n\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport reportWebVitals from './reportWebVitals'\nimport {MainApp} from \"./App\"\nimport firebase from 'firebase'\n\nconst  firebaseConfig = {\n\tapiKey: \"AIzaSyBodS8dyFJe8zphDqN-AhzRC5vqqVQPYuc\",\n\tauthDomain: \"gp-firebase-1f88e.firebaseapp.com\",\n\tdatabaseURL: \"https://gp-firebase-1f88e-default-rtdb.firebaseio.com\",\n\tprojectId: \"gp-firebase-1f88e\",\n\tstorageBucket: \"gp-firebase-1f88e.appspot.com\",\n\tmessagingSenderId: \"380953107415\",\n\tappId: \"1:380953107415:web:fb05f1e685cc9c8e148992\"\n}\nfirebase.initializeApp(firebaseConfig)\n\nReactDOM.render(\n      <MainApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import firebase from 'firebase'\n\nexport const firebaseUserAPI = {\n\tcreateAccount(email: string, password: string) {\n\t\treturn firebase.auth().createUserWithEmailAndPassword(email, password)\n\t},\n\tnewSession(email: string, password: string) {\n\t\treturn firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL)\n\t\t\t.then(() => firebase.auth().signInWithEmailAndPassword(email, password))\n\t},\n\tremoveSession() {\n\t\treturn firebase.auth().signOut()\n\t},\n\tsetUserProfile(userId: string, email: string, firstName: string, lastName: string, role: string) {\n\t\treturn firebase.database().ref(`users/${userId}`).set({email, firstName, lastName, role})\n\t},\n\tgetUserProfile(userId) {\n\t\treturn firebase.database().ref(`users/${userId}`).once('value')\n\t},\n\teditUserProfile(userId: string, email: string, firstName: string, lastName: string, role: string) {\n\t\tlet updateData = {email, firstName, lastName, role}\n\t\tlet updates = {};\n\t\tupdates[`users/${userId}`] = updateData;\n\t\treturn firebase.database().ref().update(updates);\n\t},\n\tgetUsers() {\n\t\treturn firebase.database().ref(`users`).once('value')\n\t}\n}\nexport const firebaseNotesAPI = {\n\tgetNotes(userId) {\n\t\treturn firebase.database().ref(`notes/${userId}`).once('value')\n\t},\n\taddNote(userId, newNote) {\n\t\treturn firebase.database().ref(`notes/${userId}`).push(newNote)\n\t},\n\teditNote(userId, id,date, time, value) {\n\t\tlet updateData = {userId, id,date, time, value}\n\t\tlet updates = {};\n\t\tupdates[`notes/${userId}/${id}`] = updateData;\n\t\treturn firebase.database().ref().update(updates);\n\t},\n\tremoveNote(userId, id) {\n\t\treturn firebase.database().ref(`notes/${userId}/${id}`).remove()\n\t}\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Notepad_container__3yxWs\",\"notepad\":\"Notepad_notepad__3Svz2\",\"log_out\":\"Notepad_log_out__2n_Ft\",\"notepad_row\":\"Notepad_notepad_row__PiAc0\",\"time\":\"Notepad_time__JkWst\",\"field\":\"Notepad_field__1OWI3\",\"title\":\"Notepad_title__1e-17\",\"title__notepad_row\":\"Notepad_title__notepad_row__2WVQV\",\"notepad__message\":\"Notepad_notepad__message__2O93y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dates__wrapper\":\"SelectDates_dates__wrapper__182yo\",\"dates__container\":\"SelectDates_dates__container__UGStX\",\"dates__title\":\"SelectDates_dates__title__2NOq9\",\"dates__field\":\"SelectDates_dates__field__3yJTQ\",\"dates__button_box\":\"SelectDates_dates__button_box__3C3RM\",\"dates__button\":\"SelectDates_dates__button__1pDSo\",\"dates__error\":\"SelectDates_dates__error__B_puN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_container\":\"LogIn_login_container__3LyN0\",\"title\":\"LogIn_title__2iIpn\",\"field\":\"LogIn_field__2ytqp\",\"error\":\"LogIn_error__3QyUV\",\"submitError\":\"LogIn_submitError__1e3IW\",\"field_error\":\"LogIn_field_error__32sA8\",\"button\":\"LogIn_button__2y9Uv\",\"link\":\"LogIn_link__1u6dl\",\"nav_box\":\"LogIn_nav_box__1OiTt\",\"preloader\":\"LogIn_preloader__1oT_s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Day_link__2QRRL\",\"green\":\"Day_green__1NRSw\",\"item\":\"Day_item__1o3Rg\",\"clearItem\":\"Day_clearItem__1wumY\",\"current\":\"Day_current__waQRQ\",\"nameOfDay\":\"Day_nameOfDay__1xL7d\",\"number\":\"Day_number__1PhDD\",\"note\":\"Day_note__1F1bP\",\"isHoliday\":\"Day_isHoliday__3BiQN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Calendar_container__3830a\",\"navContainer\":\"Calendar_navContainer__1803m\",\"arrowLeftBox\":\"Calendar_arrowLeftBox__2p0pv\",\"arrowRightBox\":\"Calendar_arrowRightBox__1F1Ey\",\"navLeft\":\"Calendar_navLeft__3V31j\",\"navRight\":\"Calendar_navRight__1OLMy\",\"title\":\"Calendar_title__58yxF\",\"items\":\"Calendar_items__1YjdR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ConfirmWindow_container__2-IQN\",\"text\":\"ConfirmWindow_text__Ldl35\",\"buttonGroup\":\"ConfirmWindow_buttonGroup__39EW0\",\"button\":\"ConfirmWindow_button__2dU2T\"};"],"sourceRoot":""}