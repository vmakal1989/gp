{"version":3,"sources":["components/Notepad/Notepad.module.css","components/Navbar/Navbar.module.css","components/Periods/Day/Day.module.css","components/Periods/Month/Month.module.css","components/Periods/Week/Week.module.css","reportWebVitals.ts","components/Navbar/Navbar.tsx","components/Periods/Day/Day.tsx","components/Periods/Month/Month.tsx","components/Periods/Week/Week.tsx","components/Periods/Year/Year.tsx","components/Notepad/NodepadRow.tsx","components/Notepad/Notepad.tsx","redux/notes-reducer.ts","redux/store-redux.ts","App.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","currentPeriod","toggleCurrentPeriod","className","style","container","items","to","classNames","item","item_current","onClick","Day","day","key","date","current","nameOfDay","isHoliday","name","number","note","getDaysOfTheWeek","daysOfTheWeek","i","moment","dayOfYear","push","format","Month","map","Week","Year","NodepadRow","hour","notepad_row","time","field","Notepad","notepad","log_out","title","ADD_NODE","initialState","notes","data","reducers","combineReducers","state","action","type","store","createStore","applyMiddleware","thunkMiddleware","AppContainer","withRouter","props","useState","setCurrentPeriod","path","exact","render","pathname","location","split","MainApp","basename","process","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c4e6995.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Notepad_container__2alWt\",\"notepad\":\"Notepad_notepad__1s2EH\",\"log_out\":\"Notepad_log_out__3T4Sv\",\"notepad_row\":\"Notepad_notepad_row__1e4V8\",\"time\":\"Notepad_time__2QE_r\",\"field\":\"Notepad_field__v9Em8\",\"title\":\"Notepad_title__2DOvQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Navbar_container__1p4_s\",\"items\":\"Navbar_items__3anno\",\"item\":\"Navbar_item__1BuS9\",\"item_current\":\"Navbar_item_current__3Kr3T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Day_item__2XdWD\",\"current\":\"Day_current__2TUfN\",\"nameOfDay\":\"Day_nameOfDay__2ePN4\",\"number\":\"Day_number__1tDie\",\"note\":\"Day_note__CcFol\",\"isHoliday\":\"Day_isHoliday__3OS25\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Month_container__3Z0PJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Week_container__rmQVe\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {FunctionComponent} from 'react'\r\nimport style from './Navbar.module.css'\r\nimport classNames from \"classnames\";\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface navbarProps {\r\n\tcurrentPeriod: string,\r\n\ttoggleCurrentPeriod: (type: string) => void\r\n}\r\n\r\nexport const Navbar: FunctionComponent<navbarProps> = ({currentPeriod, toggleCurrentPeriod}) => {\r\n\treturn (\r\n\t\t<nav className={style.container}>\r\n\t\t\t<ul className={style.items}>\r\n\t\t\t\t<Link to=\"/\" >\r\n\t\t\t\t\t<li className={classNames([style.item, currentPeriod === 'week' ? style.item_current : ''])} onClick={() => toggleCurrentPeriod('week')}>7 days</li>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<Link to=\"/\" >\r\n\t\t\t\t\t<li className={classNames([style.item, currentPeriod === 'month' ? style.item_current : ''])} onClick={ () => toggleCurrentPeriod('month')}>28 days</li>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<Link to=\"/\" >\r\n\t\t\t\t\t<li className={classNames([style.item, currentPeriod === 'year' ? style.item_current : ''])} onClick={ () => toggleCurrentPeriod('year')}>a year</li>\r\n\t\t\t\t</Link>\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t)\r\n}","import React, {FunctionComponent} from 'react'\r\nimport style from './Day.module.css'\r\nimport classNames from \"classnames\";\r\nimport { Link } from 'react-router-dom';\r\nimport { elementsOfDayType } from '../../../types/types';\r\n\r\ninterface dayProps {\r\n    day: elementsOfDayType\r\n    key: string\r\n}\r\n\r\nexport const Day: FunctionComponent<dayProps> = ({day, key}) => {\r\n    return (\r\n        <Link to={'/notepad/'+ day.date} >\r\n            <div className={classNames([style.item, day.current ? style.current : ''])}>\r\n                <div className={classNames([style.nameOfDay, day.isHoliday ? style.isHoliday : ''])}>{day.name}</div>\r\n                <div className={classNames([style.number])}>{day.number}</div>\r\n                <div className={classNames([style.note])}>Note: {day.note}</div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}","import React, {FunctionComponent} from 'react'\r\nimport style from './Month.module.css'\r\nimport {Day} from \"../Day/Day\";\r\nimport moment from 'moment'\r\nimport { elementsOfDayType } from '../../../types/types';\r\n\r\nconst isHoliday = (name: string): boolean => {\r\n\treturn name === \"Saturday\" ? true : name === \"Sunday\" ? true : false\r\n}\r\nconst getDaysOfTheWeek = (): elementsOfDayType[] => {\r\n\tconst daysOfTheWeek: elementsOfDayType[] = []\r\n\tfor(let i = moment().dayOfYear(); i < moment().dayOfYear() + 28; i++) {\r\n\t\tdaysOfTheWeek.push({\r\n\t\t\tname: moment().dayOfYear(i).format('dddd'),\r\n\t\t\tnumber: moment().dayOfYear(i).format('D'),\r\n\t\t\tnote: 0,\r\n\t\t\tcurrent: moment().dayOfYear() === i ? true : false,\r\n\t\t\tisHoliday: isHoliday(moment().dayOfYear(i).format('dddd')),\r\n\t\t\tdate: moment().dayOfYear(i).format(\"DD.MM.YY\")\r\n\t\t})\r\n\t}\r\n\treturn daysOfTheWeek\r\n}\r\n\r\nexport const Month: FunctionComponent = () => {\r\n\treturn (\r\n\t\t<div className={style.container}>\r\n\t\t\t{ getDaysOfTheWeek().map(day => <Day key={day.date} day={day}/>)}\r\n\t\t</div>\r\n\t)\r\n}","import React, {FunctionComponent} from 'react'\r\nimport style from './Week.module.css'\r\nimport {Day} from \"../Day/Day\"\r\nimport moment from 'moment'\r\nimport { elementsOfDayType } from '../../../types/types'\r\n\r\nconst isHoliday = (name: string): boolean => {\r\n\treturn name === \"Saturday\" ? true : name === \"Sunday\" ? true : false\r\n}\r\nconst getDaysOfTheWeek = (): elementsOfDayType[] => {\r\n\tconst daysOfTheWeek: elementsOfDayType[] = []\r\n\tfor(let i = moment().dayOfYear(); i < moment().dayOfYear() + 7; i++) {\r\n\t\tdaysOfTheWeek.push({\r\n\t\t\tname: moment().dayOfYear(i).format('dddd'),\r\n\t\t\tnumber: moment().dayOfYear(i).format('D'),\r\n\t\t\tnote: 0,\r\n\t\t\tcurrent: moment().dayOfYear() === i ? true : false,\r\n\t\t\tisHoliday: isHoliday(moment().dayOfYear(i).format('dddd')),\r\n\t\t\tdate: moment().dayOfYear(i).format(\"DD.MM.YYYY\")\r\n\t\t})\r\n\t}\r\n\treturn daysOfTheWeek\r\n}\r\n\r\n\r\nexport const Week: FunctionComponent = () => {\r\n\r\n\treturn (\r\n\t\t<div className={style.container}>\r\n\t\t\t\t{ getDaysOfTheWeek().map(day => <Day key={day.date} day={day}/>)}\r\n\t\t</div>\r\n\t)\r\n}","import React, {FunctionComponent} from 'react'\r\n\r\nexport const Year: FunctionComponent = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tYear\r\n\t\t</div>\r\n\t)\r\n}","import React, {FunctionComponent} from \"react\"\r\nimport style from \"./Notepad.module.css\";\r\nimport TextareaAutosize from \"react-autosize-textarea\";\r\ninterface propsType {\r\n    hour: string\r\n}\r\n\r\nexport const NodepadRow: FunctionComponent<propsType> = ({hour}) => {\r\n    return (\r\n        <div className={style.notepad_row}>\r\n            <span className={style.time}>{hour}.00</span><TextareaAutosize  className={style.field} />\r\n        </div>\r\n    )\r\n}","import React, {FunctionComponent} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport style from './Notepad.module.css'\r\nimport {NodepadRow} from \"./NodepadRow\";\r\n\r\ninterface propsType {\r\n    date: string\r\n}\r\n\r\n\r\nexport const Notepad: FunctionComponent<propsType> = ({date}) => {\r\n    const hours: Array<string> = ['00','01','02','03','04','06','07','08','09','10','11','12','13','14','15','16','17','18','19','20','21','22','23']\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.notepad}>\r\n                <Link to='/' className={style.log_out}></Link>\r\n                <div className={style.title}>\r\n                    {date}\r\n                </div>\r\n                {hours.map(hour => <NodepadRow hour={hour}/>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}","const ADD_NODE: string = 'ADD_NODE'\r\n\r\ntype initialStateType = {\r\n    notes: Array<noteType>\r\n}\r\ntype noteType = {\r\n    data: string\r\n    time: string\r\n    note: string\r\n}\r\ntype actionType = {\r\n    type: string\r\n    note: noteType\r\n}\r\n\r\nconst initialState: initialStateType = {\r\n    notes : [\r\n        {\r\n            data : '15.01.20',\r\n            time: '00.00',\r\n            note: ''\r\n        }\r\n    ]\r\n\r\n\r\n\r\n}\r\n\r\nexport const notes_reducer = (state=initialState, action: actionType): any => {\r\n    switch (action.type) {\r\n        case ADD_NODE:\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addNote = (note: noteType): actionType => ({type: ADD_NODE, note });","import {combineReducers, createStore, applyMiddleware} from 'redux'\r\nimport {notes_reducer} from './notes-reducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nconst reducers: any = combineReducers({\r\n    notes: notes_reducer\r\n})\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\nexport default store","import React, {FunctionComponent, useState} from 'react'\nimport './App.css'\nimport {Navbar} from \"./components/Navbar/Navbar\"\nimport { Month } from './components/Periods/Month/Month'\nimport {Week} from \"./components/Periods/Week/Week\"\nimport {Year} from \"./components/Periods/Year/Year\"\nimport {Notepad} from \"./components/Notepad/Notepad\"\nimport {Route, BrowserRouter, withRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store-redux\";\n\nconst getNotepadTitle = (pathname: string): string => {\n    const pathArray = pathname.split('/')\n    return pathArray[2]\n}\n\nconst App: FunctionComponent<any> = (props) => {\n    const [currentPeriod, setCurrentPeriod] = useState<string>('week')\n    function toggleCurrentPeriod(type: string): void {\n        setCurrentPeriod(type)\n    }\n    const renderPeriod = (): JSX.Element => {\n        return currentPeriod === 'week' ? <Week /> : currentPeriod === 'month' ? <Month /> : <Year />\n    }\n    return (\n    <div className='app'>\n        <Navbar currentPeriod={currentPeriod} toggleCurrentPeriod={toggleCurrentPeriod}/>\n        <Route path='/' exact render={() => renderPeriod()}/>\n        <Route path='/notepad' render={() => <Notepad date={getNotepadTitle(props.location.pathname)}/>}/>\n    </div>\n    )\n}\nconst AppContainer = withRouter(App);\n\nexport const MainApp: FunctionComponent = () => {\n    return (\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Provider store={store}>\n                <AppContainer />\n            </Provider>\n        </BrowserRouter>\n    )\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {MainApp} from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <MainApp />,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}